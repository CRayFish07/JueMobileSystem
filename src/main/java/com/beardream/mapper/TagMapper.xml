<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beardream.dao.TagMapper">
  <resultMap id="BaseResultMap" type="com.beardream.model.Tag">
    <id column="tag_id" jdbcType="INTEGER" property="tagId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="tag_type" jdbcType="TINYINT" property="tagType" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
  </resultMap>
  <sql id="Base_Column_List">
    tag_id, name, content, tag_type, add_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_tag
    where tag_id = #{tagId,jdbcType=INTEGER}
  </select>
  <select id="findBySelective" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_tag
    <where>
      <if test="tagId != null">
        and tag_id = #{tagId,jdbcType=INTEGER}
      </if>
      <if test="name != null">
        and name = #{name,jdbcType=VARCHAR}
      </if>
      <if test="content != null">
        and content = #{content,jdbcType=VARCHAR}
      </if>
      <if test="tagType != null">
        and tag_type = #{tagType,jdbcType=TINYINT}
      </if>
      <if test="addTime != null">
        and add_time = #{addTime,jdbcType=TIMESTAMP}
      </if>
    </where>
    ORDER  by add_time DESC
  </select>
  <!-- 商家表、菜品表、标签表查询结果集 -->
  <resultMap id="DishDishBusinessTagResultMap" type="com.beardream.model.DishDishBusinessTag">
      <collection property="dishDishBusinessTags" javaType="ArrayList" column="tag_id"
                  ofType="DishDishBusinessTag" select="selectdishDishbusinessTag">
      <id column="tag_id" jdbcType="INTEGER" property="tagId"/>
      <result column="dish_id" jdbcType="INTEGER" property="dishId"/>
      <result column="business_id" jdbcType="INTEGER" property="tagId"/>
        <result column="dish_business_id" jdbcType="INTEGER" property="dishBusinessId"/>
      <result column="dish_type" jdbcType="VARCHAR" property="dishType"/>
        <result column="dish_image" jdbcType="VARCHAR" property="dishImage"/>
      <result column="dish_name" jdbcType="VARCHAR" property="dishName"/>
      <result column="name" jdbcType="VARCHAR" property="tagName"/>
      <result column="add_time" jdbcType="VARCHAR" property="addTime"/>
    </collection>
  </resultMap>
  <select id="findDishDishBusinessTagBySelective" resultMap="DishDishBusinessTagResultMap">
    SELECT * FROM t_tag WHERE tag_id = #{tagId}
  </select>
  <select id="selectdishDishbusinessTag"  resultMap="DishDishBusinessTagResultMap">
  SELECT
  db.dish_business_id,db.business_id,db.dish_type,
  d.dish_name,d.dish_id,d.dish_image,d.add_time,
  t.tag_id,t.name

  from t_dish_business db
  left outer join t_dish d on db.dish_id = d.dish_id
  left outer join t_tag t on db.tag_id = t.tag_id
  <where>
    <if test="dishBusinessId != null">
      and dish_business_id = #{dishBusinessId,jdbcType=INTEGER}
    </if>
    <if test="businessId != null">
      and business_id = #{businessId,jdbcType=INTEGER}
    </if>
    <if test="dishId != null">
      and dish_id = #{dishId,jdbcType=INTEGER}
    </if>
    <if test="tagId != null">
      and tag_id = #{tagId,jdbcType=INTEGER}
    </if>
    <if test="dishName != null">
      and dish_name = #{dishName,jdbcType=VARCHAR}
    </if>
    <if test="dishImage != null">
      and dish_image = #{dishImage,jdbcType=VARCHAR}
    </if>
    <if test="tagId != null">
      and tag_id = #{tagId,jdbcType=INTEGER}
    </if>
    <if test="tagName != null">
      and name = #{tagName,jdbcType=VARCHAR}
    </if>
    <if test="addTime != null">
      and add_time = #{addTime,jdbcType=TIMESTAMP}
    </if>
  </where>
  order by add_time desc
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_tag
    where tag_id = #{tagId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.beardream.model.Tag">
    insert into t_tag (tag_id, name, content, 
      tag_type, add_time)
    values (#{tagId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{tagType,jdbcType=TINYINT}, #{addTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.beardream.model.Tag">
    insert into t_tag
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tagId != null">
        tag_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="tagType != null">
        tag_type,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tagId != null">
        #{tagId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="tagType != null">
        #{tagType,jdbcType=TINYINT},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.beardream.model.Tag">
    update t_tag
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="tagType != null">
        tag_type = #{tagType,jdbcType=TINYINT},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where tag_id = #{tagId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.beardream.model.Tag">
    update t_tag
    set name = #{name,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      tag_type = #{tagType,jdbcType=TINYINT},
      add_time = #{addTime,jdbcType=TIMESTAMP}
    where tag_id = #{tagId,jdbcType=INTEGER}
  </update>
</mapper>